'use strict';

describe('Olympics controllers', function() {
  
  var ROWING = {"id":16,"name":"Rowing"};
  var SAILING = {"id":17,"name":"Sailing"};
  var ALL_SPORTS = [ROWING, SAILING];

  beforeEach(module('app'));

  describe('In the SportList controller', function(){
    var ctrl, scope, $httpBackend;

    beforeEach(inject(function(_$httpBackend_, $rootScope, $controller) {
      $httpBackend = _$httpBackend_;

      scope = $rootScope.$new();
      ctrl = $controller('SportList', {$scope: scope});
    }));
    
    afterEach(function () {
      $httpBackend.verifyNoOutstandingExpectation();
      $httpBackend.verifyNoOutstandingRequest();
    });

    describe('the getAllSports method', function(){
      
      beforeEach(function() {
        $httpBackend.expectGET('/api/v1/sports')
                    .respond(ALL_SPORTS);
        scope.getAllSports();
        $httpBackend.flush();
      });
      
      it('should return the correct number of sport names', function() {
        expect(scope.sports.length).toEqual(2);
      });
  
      it('should return the correct sport names', function() {
        expect(scope.sports).toEqual(ALL_SPORTS);
      });
    });

    describe('the getSport method', function(){
      beforeEach(function() {
        $httpBackend.expectGET('/api/v1/sports/' + ROWING.id)
                    .respond(ROWING);
      });
      
      it('should return the correct sport for the id when no other sport has been selected', function() {
        scope.getSport(ROWING.id);
        expect(scope.chosenSport).toBeUndefined();
        $httpBackend.flush();
        expect(scope.chosenSport).toEqual(ROWING);
      });

      it('should return the correct sport for the id overwriting the existing selection', function() {
        scope.getSport(ROWING.id);
        $httpBackend.flush();
        expect(scope.chosenSport).toEqual(ROWING);

        $httpBackend.expectGET('/api/v1/sports/' + SAILING.id)
                    .respond(SAILING);
        
        scope.getSport(SAILING.id);
        $httpBackend.flush();
        expect(scope.chosenSport).toEqual(SAILING);
      });
    });
    
  });

});

